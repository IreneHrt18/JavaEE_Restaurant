    在早期学习学习Java、c++面向对象的编程时，对于面向对象的概念还不甚理解。自己搭建一个小型项目时，都是代码优先，用实践去完善项目结构。就像是想要搭建一个茅屋，所有准备好了的只有锤子，也就是编程环境。在路上看见了茅草，就把茅草盖在房顶，看见泥巴，就把泥巴糊在墙体，看见木桩，又要去改动房子结构，可能从开始到完成茅屋的构造只需要几个小时，只要茅屋够大且不漏雨，就可以安居。如果未能达到期望的效果，返工总是可以的，无非就是让住的人受点委屈。
但如果建一个稍微大型的项目，就像建造一个像样一点的房子，此时就不能再一个人单干了，更不能没有计划安排的去建造这个房子。我们要先把房子的蓝图设计好，有几个房间，房间都有什么功用，房间有哪些摆设，暖气水电应该如何铺设，也就意味着用UML设计项目的用例，类图的方法属性，等等。这样有了一个设计图，我们就开始准备材料，搭建房梁，铺设水电，这样，一个现代化的房屋就建造好了。当房子跑水或者漏电时，只需要叫来维修工，换个水管，改个接口，房子不会有大的改动。
在目前为止我们所做过的项目也就达到了这个水平而已。如果要搭建更大型的项目，只准备好基本工具是万万不够的。因为这栋大楼的投资方可能会对建筑物的规模，形状，风格，设施有着明确的要求，同时，在项目开工后，他们也可能会经常改变想法。因此，维护一个建筑的代价太高了，我们必须做出更详细的计划，方便后期维护的时候不至于破坏当初的设计结构，或者造成大楼的倒塌。并且，负责建筑物设计和施工的是一个庞大的组织机构，通常会根据需要，对不同的目标用途设计不同种类的设计图，也就相当于各种各样的UML建模图，方便设计人员和施工人员更好的交流沟通，也方便对把建筑概念转换为实际的建筑的过程进行积极地管理。
到此为止，JavaEE实践课成功的帮助我们提高了我们的建筑水平，我们从一个只会盖茅屋的建筑小白逐渐成长为一个正规建筑公司的建筑设计师。
    在目前的项目中，我们经过讨论决定使用一个看起来比较省时间的省力气的架构，但事实上这个项目在多人协作更改下变得越来越臃肿，类结构越来越复杂。这个设计就是将所有应该存在的实体类对应的接口中的对数据库的操作整合到四个大的接口中，这样的设计在个人的小项目中是没有问题的，但是到了这种大项目，每个人的设计思路不同，代码更新时间不同，所导致的后果就是相同功能的代码在接口中定义了很多遍。并且对应这个接口的实体类对应的服务类都需要去实现很多从来没有用到过的方法。这种设计违背了接口隔离的原则，让整个系统在后期变得臃肿不堪。
以上就是我对整个项目中存在的不足进行的总结，在之后我想说的是本人在项目中体会最深的还是自己作为一个学生项目经验太少，要学习的东西还很多。在项目初始我们就凭借自己少的可怜的知识开始对项目的框架进搭建，然后结果可想而知。所以我们应该多多学习，总结一下前辈的经验，在网上，在树上多学习开发一个项目的必要流程和框架以及知识。程序员总是在学习中进步！
在本次JavaEE订餐系统设计和实现的过程中，我完成的是数据库的设计以及订单部分的设计和实现。在这个过程中，我逐渐掌握和熟悉了web应用开发的基本思路和设计理念。也又一次认识到了数据库设计的重要性。合理的数据库设计，奠定了整个项目的开端。当数据库设计出现问题，会给后续的设计和实现增添很多不可预测的阻碍和困难。在订单模块的设计上。我采用了先将所有订单信息集中展示，然后通过订单编号跳转界面，展示订单详情的设计思路。这样设计一方面保证了订单内容的全部展示，也符合现实逻辑。在订单详情页面可以根据用户的需求完成相应的跳转。例如跳转到支付页面等等。为了方便数据的管理。我将显示信息部分交由jsp完成。Servlet完成跳转和数据处理。在本次订餐系统的设计与实现。我们小组使用了git来管理代码。团队合作带来方便的同时，代码的整合也造成了很多问题。不同组员之间的分工不同。在实现之前就规定好相应的标准十分重要。不仅会给小组合作带来方便而且会进一步提高效率。亲身参与Web项目的开发，与我而言是第一次。在代码的编写和系统的设计上可能出现了一些问题，但是我相信，在今后web项目的开发的过程中。我一定会吸取经验。注意之前出现的问题。在跳转和显示方面进一步优化。Web项目的开发离不开对数据库的设计和操作。这就要求我，不仅要熟练掌握web开发技术，而且要熟练掌握数据库的开发和设计。每一次的亲身实践都是为了今后的设计更加完善。在发现问题解决问题的过程中。我不要断学习和试错。这也是我本次JavaEE课程实践中所学习到的。
    在本学期javaee的学习中收获最大的就是结合本学期的UML课程，对于系统结构的设计和项目的管理，以及工厂类（Factory）、数据访问类(DAO)等的使用有了初步的掌握。
在项目开展初期，我们组在选择做一个类似于“饿了吗”这种集成了众多商家的大型网站还是做一个类似于“肯德基网上订餐系统”这种针对一个商家的网站进行了讨论，考虑到项目太大会使数据库逻辑设计和项目的架构设计复杂性增大，我们一致同意完成一个“麻雀虽小，五脏俱全”的小型商家订餐网站，并且结合本学期课程内容，在项目初期对用例需求的分析和类之间的组织架构进行了详细的讨论，对项目任务进行了有效的分工。
在代码实现阶段，我发现了自身还有很多的不足之处。其中最明显的就是由于在平时缺少练习，对编程工具的使用非常的不熟悉，导致我的进展度比其他人要慢，效率非常低，比如通过这次项目我才知道，J2EE项目还可以在谷歌浏览器调试，可以更有效率的找到错误。
另一个就是因为JSP页面中可以嵌入JavaScript脚本，Java代码等多种形式的代码，JSP页面、JS脚本、Java代码之间的参数能否传递，request等对象是否能在JS脚本，Java代码段中获得，如何获得，都是大有学问的。以前一直习惯了一个页面变量反复使用，在此次项目中，常常由于忽略了某个参数值在jS脚本中能否直接使用（需要EL表达式或<% %>等赋值）而产生错误，浪费了不少的时间。
通过本次的课程实践，弥补了我在前面的课程学习中练习不足的缺陷，使我更加熟悉企业级Java开发，对课程学习中数据访问接口（DAO）、JavaEE架构模式下的MVC结构（Servlet+JSP+JavaBean）和Javabean实体类、工厂类（DAOFactory）的应用优势有了更深刻的体会。
